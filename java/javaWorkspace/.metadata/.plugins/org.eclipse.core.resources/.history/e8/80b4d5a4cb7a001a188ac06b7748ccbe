package array.test2;

import java.util.Random;

/*
 * 정렬
 * ::
 * 배열과 같은 자료구조에 대해서는 정렬에 대한 요구사항이 빈번하게 일어난다.
 * 정렬을 구현하기 위한 알고리즘 중 가장 대표적인 버블 정렬에 대해서 살펴보겠다.
 * 정렬전{2, 5, 3, 9} --> 정렬후{2, 3, 5, 9} // 기본이 오름차순. DB 다룰 때 mySQL에도 정렬이 기본적으로 들어가 있음.
 * 
 * 버블정렬
 * ::
 * 인접한 두 수를 비교해서 큰수를 뒤로 보내는 방법. 
 * 버블정렬을 하려면 temp 라는 임시변수가 필요하고 swap 기법이 필요하다.
 * 
 * 2, 5 두수를 비교 --> 2, 5를 유지
 * 5, 3 두수를 비교 --> 
 * 1) temp 라는 임시 변수(첫번째 수가 두번째 수보다 더 클 때 임시변수에 저장.) -> temp에 5 저장
 * 2) 3, 3
 * 3) temp 에서 꺼내온 5를 뒷자리에 3, 5
 * 이처럼 두 수의 자리를 바꾸는 방법을 swap이라 한다. 스와핑.
 * 
 * 주의!!
 *  
 */
public class ArrayBubbleSortingTest3 {

	public static void main(String[] args) {
		
		/*int[ ] arr = {2,5,3,9};
		int temp = 0; // 초기화 시켜줘야 함. 값이 없으면 0.
		for(int j=0; j<arr.length-1; j++) {
			if(arr[j]>arr[j+1]) {//앞의 수가 뒤의 수보다 크다면
				temp = arr[j];
				arr[j] = arr[j+1];
				arr[j+1] = temp;
			}
		}
		System.out.println("=====정렬완료=====");
		for(int i : arr) {
			System.out.print(i + " ");
		}*/
		
		Random r = new Random();
		// int aa = r.nextInt(); // 20억(음수양수 포함해서 그 정도...)
		int[ ] arr = new int[10]; // 범위를 한정. 10개를 랜덤하게 가져오겠다.
		for(int i=0; i<arr.length; i++) {
			arr[i] = r.nextInt(10); // 0~9까지의 난수값을 추출
		}// 초기화 끝
		System.out.println("==== 초기화 완료");
		for(int i : arr) System.out.print(i + " ");
		
		int temp = 0; // 초기화 시켜줘야 함. 값이 없으면 0.
		for(int i=0; i<arr.length-1; i++) { // outer for부분을 한번 더 해야 한다. 차이점 확인. 한번 더 돌려보는 것.
		for(int j=0; j<arr.length-1; j++) {
			if(arr[j]>arr[j+1]) {//앞의 수가 뒤의 수보다 크다면
				temp = arr[j];
				arr[j] = arr[j+1];
				arr[j+1] = temp;
			}
		}
		}
		System.out.println("\n=====정렬완료=====");
		for(int i : arr) {
			System.out.print(i + " ");
		}
	}

}
