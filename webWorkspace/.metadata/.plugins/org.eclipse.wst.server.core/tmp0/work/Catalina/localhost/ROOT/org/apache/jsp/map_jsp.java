/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-07-03 05:49:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.shobu.model.MemberVO;

public final class map_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1593616563371L));
    _jspx_dependants.put("/chat.jsp", Long.valueOf(1593743411586L));
    _jspx_dependants.put("jar:file:/C:/kyh/eclipse/webWorkspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/shobu2/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1075171302000L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1593754500101L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.shobu.model.MemberVO");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>토토판매점 - 쇼부 Shobu</title>\r\n");
      out.write("<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 맵 스타일 시작 -->\r\n");
      out.write("<style>\r\n");
      out.write("#map {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 70%;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mapBox {\r\n");
      out.write("\tmargin-top: 50px;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 800px;\r\n");
      out.write("\talign-content: center;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 맵 스크립트 부분  -->\r\n");
      out.write("<script>\r\n");
      out.write("\tvar map;\r\n");
      out.write("\tfunction initMap() {\r\n");
      out.write("\r\n");
      out.write("\t\tmap = new google.maps.Map(document.getElementById('map'), {\r\n");
      out.write("\t\t\tzoom : 14,\r\n");
      out.write("\t\t\tcenter : {\r\n");
      out.write("\t\t\t\tlat : 37.4865187,\r\n");
      out.write("\t\t\t\tlng : 127.0200871\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (navigator.geolocation) {\r\n");
      out.write("\t\t\tnavigator.geolocation.getCurrentPosition(function(position) {\r\n");
      out.write("\t\t\t\tvar pos = {\r\n");
      out.write("\t\t\t\t\tlat : position.coords.latitude,\r\n");
      out.write("\t\t\t\t\tlng : position.coords.longitude\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tmap.setCenter(pos);\r\n");
      out.write("\t\t\t}, function() {\r\n");
      out.write("\t\t\t\thandleLocationError(true, infoWindow, map.getCenter());\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\thandleLocationError(false, infoWindow, map.getCenter());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction handleLocationError(browserHasGeolocation, infoWindow, pos) {\r\n");
      out.write("\t\tinfoWindow.setPosition(pos);\r\n");
      out.write("\t\tinfoWindow\r\n");
      out.write("\t\t\t\t.setContent(browserHasGeolocation ? 'Error: The Geolocation service failed.'\r\n");
      out.write("\t\t\t\t\t\t: 'Error: Your browser doesn\\'t support geolocation.');\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<!-- Map 개인 키 부분 -->\r\n");
      out.write("<script async defer\r\n");
      out.write("\tsrc=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD0085qYvaQZv0nFw1TGj1lWGUdjnv16jU&callback=initMap\">\r\n");
      out.write("</script>\r\n");
      out.write("<!-- 맵 스크립트 부분 끝 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta http-equiv=\"content-script-type\" content=\"text/javascript\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("  <title>쇼부 Shobu</title>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("  <style>\r\n");
      out.write("  .menu{\r\n");
      out.write("  \twidth: 25px;\r\n");
      out.write("  \tmargin: 20px 10px;\r\n");
      out.write("  \ttext-decoration:none;\r\n");
      out.write("  }\r\n");
      out.write("  .menu a:-webkit-any-link, #menu a:-webkit-any-link,#login a:-webkit-any-link{\r\n");
      out.write("  \ttext-decoration:none;\r\n");
      out.write("  }\r\n");
      out.write("  #login{\r\n");
      out.write(" \twidth:100%;\r\n");
      out.write("  \tbackground-color: #343d52;\r\n");
      out.write("  \tcolor:#fff;\r\n");
      out.write("  \tposition:absolute; \r\n");
      out.write("  \tpadding: 3px 20px;\r\n");
      out.write("  \tbottom:0px;\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  /* 내 정보 영역 */\r\n");
      out.write("  button  {\r\n");
      out.write("  \tdisplay: inline-block;\r\n");
      out.write("  \tpadding: .5em .75em;\r\n");
      out.write("  \tcolor: #fff;\r\n");
      out.write("  \tfont-size: inherit;\r\n");
      out.write("  \tline-height: normal;\r\n");
      out.write("  \tvertical-align: middle;\r\n");
      out.write("  \tbackground-color: #343D52;\r\n");
      out.write("  \tcursor: pointer;\r\n");
      out.write("  \tborder: 1px solid #343D52;\r\n");
      out.write("  \tborder-radius: .25em;\r\n");
      out.write("  \t-webkit-transition: background-color 0.2s;\r\n");
      out.write("  \ttransition: background-color 0.2s;\r\n");
      out.write("  }\r\n");
      out.write("  button:hover, button:active {\r\n");
      out.write("  \tbackground-color: #fff;\r\n");
      out.write("  \tcolor: #343D52;\r\n");
      out.write("  }\r\n");
      out.write("  .leaveBtn {\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("  \tpadding: .5em .75em;\r\n");
      out.write("  \tcolor: #fff;\r\n");
      out.write("  \tfont-size: inherit;\r\n");
      out.write("  \tline-height: normal;\r\n");
      out.write("  \tvertical-align: middle;\r\n");
      out.write("  \tbackground-color: #f44336;\r\n");
      out.write("  \tcursor: pointer;\r\n");
      out.write("  \tborder: 1px solid #f44336;\r\n");
      out.write("  \tborder-radius: .25em;\r\n");
      out.write("  \t-webkit-transition: background-color 0.2s;\r\n");
      out.write("  \ttransition: background-color 0.2s;\r\n");
      out.write("  }\r\n");
      out.write("  .leaveBtn:link, .leaveBtn:visited, .leaveBtn:hover, .leaveBtn:active{\r\n");
      out.write("    background: #fff;\r\n");
      out.write("    color: #f44336;\r\n");
      out.write("    border: 1px solid #f44336;\r\n");
      out.write("  }\r\n");
      out.write("  #nickname, input[name=pwd]{\r\n");
      out.write("    display:inline; \r\n");
      out.write("    width:79%; \r\n");
      out.write("  }\r\n");
      out.write("  #profileImg:hover{\r\n");
      out.write("  \topacity: 0.60;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  /* 결과보기 영역 */\r\n");
      out.write("  .resultTable{\r\n");
      out.write("    border: 1px solid #343d52;\r\n");
      out.write("    border-collapse: collapse;\r\n");
      out.write("  \tmargin: 25px 0;\r\n");
      out.write("  \tfont-size: 0.9em;\r\n");
      out.write("  \tborder-radius: 5px 5px 0 0;\r\n");
      out.write("  \toverflow: hidden;\r\n");
      out.write("  \tbox-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\r\n");
      out.write("  }\r\n");
      out.write("  .resultTable th{\r\n");
      out.write("    background-color: #343d52;\r\n");
      out.write("  \tcolor: #FFFFFF;\r\n");
      out.write("  \ttext-align: center;\r\n");
      out.write("  \tfont-weight: bold;\r\n");
      out.write("  }\r\n");
      out.write("  .resultTable thead td {\r\n");
      out.write("    background-color: #D9E5FF;\r\n");
      out.write("  }\r\n");
      out.write("  .resultTable tbody th{\r\n");
      out.write("    background: #F15F5F;\r\n");
      out.write("  }\r\n");
      out.write("  .resultTable tr{\r\n");
      out.write("  \ttext-align: center;\r\n");
      out.write("  \tfont-weight: normal;\r\n");
      out.write("  \tborder: 1px solid #DDDDDD;\r\n");
      out.write("  }\r\n");
      out.write("  .resultTable th,\r\n");
      out.write("  .resultTable td {\r\n");
      out.write("  \tpadding: 12px 15px;\r\n");
      out.write("  \tborder: 1px solid #DDDDDD;\r\n");
      out.write("  }\r\n");
      out.write("  .resultTable tbody tr {\r\n");
      out.write("  \tborder-bottom: 1px solid #DDDDDD;\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  .content-table {\r\n");
      out.write("  \tborder-collapse: collapse;\r\n");
      out.write("  \tmargin: 25px 0;\r\n");
      out.write("  \tfont-size: 0.9em;\r\n");
      out.write("  \tmin-width: 400px;\r\n");
      out.write("  \tborder-radius: 5px 5px 0 0;\r\n");
      out.write("  \toverflow: hidden;\r\n");
      out.write("  \tbox-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\r\n");
      out.write("  }\r\n");
      out.write("  .content-table thead tr {\r\n");
      out.write("  \tbackground-color: #343d52;\r\n");
      out.write("  \tcolor: #FFFFFF;\r\n");
      out.write("  \ttext-align: left;\r\n");
      out.write("  \tfont-weight: bold;\r\n");
      out.write("  }\r\n");
      out.write("  .content-table th,\r\n");
      out.write("  .content-table td {\r\n");
      out.write("  \tpadding: 12px 15px;\r\n");
      out.write("  }\r\n");
      out.write("  .content-table tbody tr {\r\n");
      out.write("  \tborder-bottom: 1px solid #DDDDDD;\r\n");
      out.write("  }\r\n");
      out.write("  .content-table tbody tr:nth-of-type(even) {\r\n");
      out.write("  \tbackground-color: #F3F3F3;\r\n");
      out.write("  \tcolor: #343d52;\r\n");
      out.write("  }\r\n");
      out.write("  .content-table tbody tr:nth-of-type(odd) {\r\n");
      out.write("  \tbackground-color: #FFFFFF;\r\n");
      out.write("  }\r\n");
      out.write("  .content-table tbody tr:last-of-type { \r\n");
      out.write("    border-bottom:2px solid #343D52; \r\n");
      out.write("  }\r\n");
      out.write("  </style>\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("  <script>\r\n");
      out.write("    // Open and close the sidebar on medium and small screens\r\n");
      out.write("    function navOpen() {\r\n");
      out.write("      document.getElementById(\"nav\").style.display = \"block\";\r\n");
      out.write("      document.getElementById(\"overlay\").style.display = \"block\";\r\n");
      out.write("    }\r\n");
      out.write("    function navClose() {\r\n");
      out.write("      document.getElementById(\"nav\").style.display = \"none\";\r\n");
      out.write("      document.getElementById(\"overlay\").style.display = \"none\";\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    $(function(){\r\n");
      out.write("    \tconst regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&#*^])[A-Za-z\\d@$!%*?&#*^]{4,10}$/;\r\n");
      out.write("    \t//정규표현식(대/소문자,숫자,특수문자 포함하여 4글자 이상)\r\n");
      out.write("    \tvar profileImg; //프로필 사진 영역\r\n");
      out.write("    \tvar password; //비밀번호 값\r\n");
      out.write("    \tvar passwordCheck; //비밀번호 확인 값\r\n");
      out.write("    \tvar pwLength; //비밀번호 길이\r\n");
      out.write("    \tvar originNickname; //원래 닉네임\r\n");
      out.write("\t\tvar nickname; //바꾼 닉네임\r\n");
      out.write("    \t\r\n");
      out.write("    \t/* 로고 영역 클릭하면 index.jsp로 이동 */\r\n");
      out.write("    \t$('#logo').click(function(){\r\n");
      out.write("    \t\tlocation.href = 'index.jsp';\r\n");
      out.write("    \t});\r\n");
      out.write("\t\t\r\n");
      out.write("    \t$(\"#profile\").on(\"change\", handleImgFileSelect); //이미지 파일 업로드시 함수 호출\r\n");
      out.write("    \t\r\n");
      out.write("    \t/* 닉네임 중복 확인 */\r\n");
      out.write("    \t$('.nicknameCheck').click(function(){\r\n");
      out.write("    \t\toriginNickname = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("    \t\tnickname = $('input[name=nickname]').val();\r\n");
      out.write("    \t\tvar nicknameCheck = $('#nicknameFlag');\r\n");
      out.write("    \t\tif(nickname==''){\r\n");
      out.write("    \t\t\talert(\"닉네임을 입력하세요\");\r\n");
      out.write("    \t\t}else if(originNickname==nickname){\r\n");
      out.write("    \t\t\talert(\"기존의 닉네임을 그대로 사용합니다\");\r\n");
      out.write("    \t\t\tnicknameCheck.attr('value', 'nicknameCheck');\r\n");
      out.write("    \t\t}else{\r\n");
      out.write("    \t\t\t$.ajax({\r\n");
      out.write("    \t\t\t\t//요청\r\n");
      out.write("    \t\t\t\ttype: \"post\", \r\n");
      out.write("    \t\t\t\turl: \"nicknameCheck.do\", \r\n");
      out.write("    \t\t\t\tdata: \"nickname=\"+nickname,\r\n");
      out.write("    \t\t\t\t\r\n");
      out.write("    \t\t\t\t//응답\r\n");
      out.write("    \t\t\t\tsuccess:function(data){ \r\n");
      out.write("    \t\t\t\t\tif(!data){\r\n");
      out.write("    \t\t\t\t\t\talert(\"사용 가능한 닉네임입니다\");\r\n");
      out.write("    \t\t\t\t\t\tnicknameCheck.attr('value', 'nicknameCheck');\r\n");
      out.write("    \t\t\t\t\t}else{\r\n");
      out.write("    \t\t\t\t\t\talert(\"이미 존재하는 닉네임입니다\");\r\n");
      out.write("    \t\t\t\t\t\t$('input[name=nickname]').val(\"\").focus();\r\n");
      out.write("    \t\t\t\t\t\tnicknameCheck.attr('value', 'notNicknameCheck');\r\n");
      out.write("    \t\t\t\t\t}\r\n");
      out.write("    \t\t\t\t}//callback\r\n");
      out.write("    \t\t\t});//ajax\r\n");
      out.write("    \t\t}//click\r\n");
      out.write("    \t});\r\n");
      out.write("    \t\r\n");
      out.write("    \t/* 비밀번호 형식 체크 */\r\n");
      out.write("    \t$('#password').keyup(function(){\r\n");
      out.write("    \t\tpwLength = $('#password').val().length;\r\n");
      out.write("    \t\tpwCheckLength = $('input[name=passwordCheck]').val().length;\r\n");
      out.write("    \t\tpassword = $('#password').val();\r\n");
      out.write("    \t\tpasswordCheck = $('input[name=passwordCheck]').val();\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t\tif(pwLength<1){\r\n");
      out.write("    \t\t\t$('#comparePW').text('비밀번호를 입력하세요');\r\n");
      out.write("    \t\t}else if(pwLength<4){\r\n");
      out.write("    \t\t\t$('#comparePW').text('4자 이상 10자 이하로 입력하세요');\r\n");
      out.write("    \t\t}else if(!regex.test(password)){\r\n");
      out.write("    \t\t\t$('#comparePW').text('대/소문자, 숫자, 특수문자를 포함하세요');\r\n");
      out.write("    \t\t}else if(pwCheckLength>0 && password!=passwordCheck){\r\n");
      out.write("    \t\t\t$('#comparePW').text('입력하신 비밀번호와 다릅니다');\r\n");
      out.write("    \t\t}else{\r\n");
      out.write("    \t\t\t$('#comparePW').text(' ');\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t});\r\n");
      out.write("    \t\r\n");
      out.write("    \t/* 회원탈퇴 영역으로 이동 */\r\n");
      out.write("    \t$('#delete').click(function(){\r\n");
      out.write("    \t\tvar flag = confirm('탈퇴하면 모든 포인트가 소멸됩니다. 그래도 탈퇴하시겠습니까?');\r\n");
      out.write("    \t\tif(!flag) return false;\r\n");
      out.write("    \t\telse{\r\n");
      out.write("    \t\t\tdocument.getElementById('updateArea').style.display='none';\r\n");
      out.write("    \t\t\tdocument.getElementById('deleteArea').style.display='block';\r\n");
      out.write("    \t\t\t$('#profileImg').css('display', 'none');\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t});\r\n");
      out.write("    \t\r\n");
      out.write("    \t/* 회원정보 수정 Ajax */\r\n");
      out.write("    \t$('#update').click(function(){\r\n");
      out.write("    \t\tvar nicknameCheck = $('input[type=hidden]:eq(0)').val();\r\n");
      out.write("    \t\tvar id = $('input[name=id]:eq(1)').val();\r\n");
      out.write("    \t\toriginNickname = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("    \t\tnickname = $('input[name=nickname]').val();\r\n");
      out.write("  \t\t  \tpassword = $('#password').val();\r\n");
      out.write("  \t\t  \tpasswordCheck = $('input[name=passwordCheck]').val();\r\n");
      out.write("  \t\t  \tif(originNickname!=nickname && nicknameCheck==\"notNicknameCheck\"){\r\n");
      out.write("  \t\t\t\talert(\"닉네임 중복 확인을 해주세요\");\r\n");
      out.write("  \t\t\t\treturn false;\r\n");
      out.write("  \t\t  \t}else if(password!=passwordCheck){\r\n");
      out.write("  \t\t\t\talert(\"입력하신 비밀번호가 다릅니다\");\r\n");
      out.write("  \t\t\t\treturn false;\r\n");
      out.write("  \t\t  \t}else if(pwLength<4 || pwLength>10){\r\n");
      out.write("  \t\t\t\talert(\"비밀번호를 4자 이상 10자 이하로 입력하세요\");\r\n");
      out.write("  \t\t\t\treturn false;\r\n");
      out.write("  \t\t  \t}else if(!regex.test(password)){\r\n");
      out.write("  \t\t\t\talert(\"비밀번호에 대/소문자, 숫자, 특수문자를 포함하세요\");\r\n");
      out.write("  \t\t\t\treturn false;\r\n");
      out.write("  \t\t  \t}else{\r\n");
      out.write("  \t\t  \t \tvar form = $('form:eq(0)')[0];\r\n");
      out.write("  \t\t\t \tvar formData = new FormData(form);\r\n");
      out.write("  \t\t       \t$.ajax({\r\n");
      out.write("  \t\t       \t\turl: 'updateMember.do',\r\n");
      out.write("  \t\t       \t    processData: false,\r\n");
      out.write("  \t     \t    \t    contentType: false,\r\n");
      out.write("  \t\t       \t    data: formData,\r\n");
      out.write("  \t\t       \t    type: 'POST',\r\n");
      out.write("  \t\t       \t    success: function(data){\r\n");
      out.write("  \t\t       \t    \talert(\"회원정보가 정상적으로 수정되었습니다\");\r\n");
      out.write("  \t\t       \t    }\r\n");
      out.write("  \t\t       \t});//ajax\r\n");
      out.write("  \t\t  \t}\r\n");
      out.write("    \t});//click\r\n");
      out.write("    \t\r\n");
      out.write("    \t/* 회원탈퇴 Ajax */\r\n");
      out.write("    \t$('#deleteArea button').click(function(){\r\n");
      out.write("    \t\tvar id = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("    \t\tvar password = $('input[name=userPwd]').val();\r\n");
      out.write("    \t\t$.ajax({\r\n");
      out.write("    \t\t\ttype:'post',\r\n");
      out.write("\t\t\t\turl:'deleteMember.do',\r\n");
      out.write("\t\t\t\tdata:\"id=\"+id+\"&password=\"+password,\r\n");
      out.write("  \t\t       \t\r\n");
      out.write("  \t\t       \tsuccess: function(data){\r\n");
      out.write("  \t\t       \t\t$('#deleteResult').css('display', 'block').text(data);\r\n");
      out.write("  \t\t       \t}\r\n");
      out.write("  \t\t    });//회원탈퇴 ajax\r\n");
      out.write("    \t});//click\r\n");
      out.write("    \t\r\n");
      out.write("    \t/* 토토 결과 보기 */\r\n");
      out.write("    \tvar id = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'; //아이디\r\n");
      out.write("    \tvar temp = new Date();   \r\n");
      out.write("\t\tvar year = temp.getFullYear(); //년도\r\n");
      out.write("\t\tvar month = temp.getMonth() + 1; //월\r\n");
      out.write("\t\tvar date = temp.getDate() - 1; //날짜\r\n");
      out.write("\t\tif(month<10) month = \"0\"+month;\r\n");
      out.write("\t\tif(date<10) date = \"0\"+date;\r\n");
      out.write("\t\tconst yesterday = year+\"-\"+month+\"-\"+date; //어제\r\n");
      out.write("\t\t$('#yesterday').text(yesterday);\r\n");
      out.write("\t\tvar flag = false; //어제 날짜에 투표했는지 아닌지\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tlet teamLogo = {두산:'OB', KT:'KT', LG:'LG', 기아:'HT', 롯데:'LT', 키움:'WO', SK:'SK', 삼성:'SS', NC:'NC', 한화:'HH'};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#correctCount').text(3);\r\n");
      out.write("\t\t$('#totalCount').text(5);\r\n");
      out.write("\t\t$('#thisMatch').append('<td>SK vs 삼성</td>');\t\t\r\n");
      out.write("\t\t$('#thisMatch').append('<td>두산 vs 키움</td>');\t\t\r\n");
      out.write("\t\t$('#thisMatch').append('<td>롯데 vs NC</td>');\t\t\r\n");
      out.write("\t\t$('#thisMatch').append('<td>KT vs LG</td>');\t\t\r\n");
      out.write("\t\t$('#thisMatch').append('<td>한화 vs 기아</td>');\t\t\r\n");
      out.write("\t\t$('#myChoice').append('<td style=\"background:#FFD8D8\"><img src=image/team/SS.png width=50px height=50px></td>');\r\n");
      out.write("\t\t$('#myChoice').append('<td><img src=image/team/OB.png width=50px height=50px></td>');\r\n");
      out.write("\t\t$('#myChoice').append('<td><img src=image/team/LT.png width=50px height=50px></td>');\r\n");
      out.write("\t\t$('#myChoice').append('<td style=\"background:#FFD8D8\"><img src=image/team/KT.png width=50px height=50px></td>');\r\n");
      out.write("\t\t$('#myChoice').append('<td style=\"background:#FFD8D8\"><img src=image/team/HT.png width=50px height=50px></td>');\r\n");
      out.write("\t\t$('#pointTable').append('<tr><td>'+yesterday+'</td><td>+'+0+'p</td><td>'+12+'p</td></tr>'); \r\n");
      out.write("\t\t$('#pointTable').append('<tr><td>2020-07-01</td><td>+'+8+'p</td><td>'+12+'p</td></tr>'); \r\n");
      out.write("\t\t$('#pointTable').append('<tr><td>2020-06-30</td><td>+'+4+'p</td><td>'+4+'p</td></tr>'); \r\n");
      out.write("\t\t$('#pointTable').append('<tr><td>2020-06-28</td><td>+'+0+'p</td><td>'+0+'p</td></tr>'); \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* \r\n");
      out.write("\t\t//어제 날짜에 투표하지 않았을 경우\r\n");
      out.write("\t\t$('#correctCount').text('0');\r\n");
      out.write("\t\t$('#totalCount').text('0');\r\n");
      out.write("\t\t$('.resultTable').hide();\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t \r\n");
      out.write("    });//Ready\r\n");
      out.write("    \r\n");
      out.write("    /* 이미지 업로드 핸들러 함수 시작 */\r\n");
      out.write("    function handleImgFileSelect(e) {\r\n");
      out.write("      var files = e.target.files;\r\n");
      out.write("      var filesArr = Array.prototype.slice.call(files);\r\n");
      out.write("        \r\n");
      out.write("      if($('input[type=file]').val() != \"\"){\r\n");
      out.write("        filesArr.forEach(function(f) {\r\n");
      out.write("        \t\r\n");
      out.write("          /* 확장자 제한 */\r\n");
      out.write("          if(!f.type.match(\"image.*\")) {\r\n");
      out.write("            alert(\"확장자는 이미지 확장자만 가능합니다.\");\r\n");
      out.write("            $('#profile').val(\"\");\r\n");
      out.write("            return false;\r\n");
      out.write("          }\r\n");
      out.write("        \t\r\n");
      out.write("          /* 용량 제한 */\r\n");
      out.write("          var fileSize = document.getElementById('profile').files[0].size;\r\n");
      out.write("          var maxSize = 5 * 1024 * 1000;\r\n");
      out.write("          if(fileSize > maxSize){\r\n");
      out.write("            alert(\"파일용량 5MB을 초과했습니다.\");\r\n");
      out.write("            $('#profile').val(\"\");\r\n");
      out.write("            return false;\r\n");
      out.write("          }\r\n");
      out.write("    \t\t\r\n");
      out.write("          /* 업로드 이미지 미리보기 */\r\n");
      out.write("          profileImg = f;\r\n");
      out.write("          var reader = new FileReader();\r\n");
      out.write("          reader.onload = function(e) {\r\n");
      out.write("            $(\"#profileImg\").attr(\"src\", e.target.result);\r\n");
      out.write("          }\r\n");
      out.write("          reader.readAsDataURL(f);\r\n");
      out.write("        });//forEach\r\n");
      out.write("      }//if\r\n");
      out.write("    }/* 이미지 업로드 핸들러 함수 끝 */\r\n");
      out.write("  </script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("  <!-- 슬라이드 메뉴바 -->\r\n");
      out.write("  <nav class=\"w3-sidebar w3-bar-block w3-collapse w3-animate-left w3-card\" style=\"z-index:3;width:250px;\" id=\"nav\">\r\n");
      out.write("    <div style=\"background-color: #343d52; height: 60px; padding-top:8px; padding-left:10px;\">\r\n");
      out.write("      <span id=\"logo\">\r\n");
      out.write("        <img src=\"image/logo/frontlogo.png\" style=\"width:40px; height:40px;\">\r\n");
      out.write("        <img src=\"image/logo/backlogo.png\" style=\"width:100px; height:20px;\">\r\n");
      out.write("      </span>\r\n");
      out.write("    </div>\r\n");
      out.write("    <a class=\"w3-bar-item w3-button w3-hide-large w3-large\" href=\"javascript:void(0)\" onclick=\"navClose()\">Close</a>\r\n");
      out.write("    <!-- 입력 -->\r\n");
      out.write("    <div id='menu' style=\"padding: 10px 20px;\">\r\n");
      out.write("\t    <a href=\"index.jsp\"><img class=\"menu\" src=\"image/menu/main.png\">메인</a><br>\r\n");
      out.write("\t    <a href=\"teampage.jsp\"><img class=\"menu\" src=\"image/menu/team.png\">팀정보</a><br>\r\n");
      out.write("\t    <a href=\"team.jsp\"><img class=\"menu\" src=\"image/menu/player.png\">선수정보</a><br>\r\n");
      out.write("\t    <a href=\"toto.do\"><img class=\"menu\" src=\"image/menu/toto.png\">모의토토</a><br>\r\n");
      out.write("\t    <a href=\"mapList.do\"><img class=\"menu\" src=\"image/menu/map.png\">토토 판매점</a><br>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"login\">\r\n");
      out.write("\t\t");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("  </nav>\r\n");
      out.write("​\r\n");
      out.write("  <!-- 메뉴바 클릭 시 화면 어둡게 처리 -->\r\n");
      out.write("  <div class=\"w3-overlay w3-hide-large w3-animate-opacity\" onclick=\"navClose()\" style=\"cursor:pointer\" id=\"overlay\">\r\n");
      out.write("  </div>\r\n");
      out.write("​\r\n");
      out.write("  <!-- 상단 서치바, 유저정보(썸네일, 아이디) -->\r\n");
      out.write("  <div class=\"w3-main\" style=\"margin-left:250px;\">\r\n");
      out.write("    <header class=\"w3-container w3-top\" style=\"background-color: #343d52; color: white; height: 60px;\">\r\n");
      out.write("      <i class=\"fa fa-bars w3-button w3-hide-large w3-display-left\" onclick=\"navOpen()\"></i>\r\n");
      out.write("      <span class=\"w3-hide-large w3-right w3-animate-opacity\" style=\"position: relative; top: 20%;\">\r\n");
      out.write("      ");
      if (_jspx_meth_c_005fchoose_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("      </span>\r\n");
      out.write("      <span class=\"w3-hide-large w3-right w3-animate-opacity\" style=\"position: relative; top: 20%;\">\r\n");
      out.write("      \t");
      if (_jspx_meth_c_005fchoose_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("      </span>\r\n");
      out.write("​\r\n");
      out.write("      <div class=\"w3-hide-small w3-hide-medium w3-animate-opacity\"\r\n");
      out.write("        style=\"width:100%; height: 100%; text-align: right; margin-left: -250px;\">\r\n");
      out.write("        <span style=\"position: relative; top: -10px;\">\r\n");
      out.write("          ");
      if (_jspx_meth_c_005fchoose_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        </span>\r\n");
      out.write("        <span style=\"position: relative; top: 3px;\">\r\n");
      out.write("          ");
      if (_jspx_meth_c_005fchoose_005f4(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        </span>\r\n");
      out.write("      </div>\r\n");
      out.write("    </header>\r\n");
      out.write("​\t\r\n");
      out.write("\t<!-- contents영역 -->\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 내 정보 시작 -->\r\n");
      out.write("\t<form method=\"post\" class=\"w3-container\" enctype=\"multipart/form-data\">\r\n");
      out.write("      <div class=\"w3-container\">\r\n");
      out.write("        <div id=\"id01\" class=\"w3-modal\">\r\n");
      out.write("          <div class=\"w3-modal-content w3-card-4 w3-animate-zoom\" style=\"max-width:600px\">\r\n");
      out.write("            <div class=\"w3-center\"><br>\r\n");
      out.write("              <span onclick=\"document.getElementById('id01').style.display='none'; location.reload()\" class=\"w3-button w3-xlarge w3-hover-red w3-display-topright\" title=\"Close Modal\">\r\n");
      out.write("                &times;\r\n");
      out.write("              </span>\r\n");
      out.write("              <input type=file name='profile' id=\"profile\" style='display: none;'> \r\n");
      out.write("              <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.image}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" style=\"width:200px; height:200px;\" class=\"w3-circle w3-margin-top\" id=\"profileImg\" onclick='document.all.profile.click()'>\r\n");
      out.write("            </div><!-- .w3-center -->\r\n");
      out.write("            <!-- 업데이트 시작 -->\r\n");
      out.write("            <div id=\"updateArea\" class=\"w3-section\" style=\"padding:40px;\">\r\n");
      out.write("              <label>\r\n");
      out.write("                <b>아이디</b>\r\n");
      out.write("              </label>\r\n");
      out.write("              <input class=\"w3-input w3-border w3-margin-bottom\" type=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"id\" readonly>\r\n");
      out.write("              <label>\r\n");
      out.write("                <b>닉네임</b>\r\n");
      out.write("              </label>\r\n");
      out.write("              <div>\r\n");
      out.write("                <input id=\"nickname\" class=\"w3-input w3-border w3-margin-bottom\" type=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"nickname\" required>\r\n");
      out.write("                <input type=\"hidden\" id=\"nicknameFlag\" value=\"notNicknameCheck\">\r\n");
      out.write("                <button class=\"w3-section w3-padding nicknameCheck\" type=\"button\">중복 확인</button>\r\n");
      out.write("              </div>\r\n");
      out.write("              <label>\r\n");
      out.write("                <b>비밀번호</b>\r\n");
      out.write("              </label>\r\n");
      out.write("              <input id=\"password\" class=\"w3-input w3-border w3-margin-bottom\" type=\"password\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.password}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"password\" maxlength=\"10\" required>\r\n");
      out.write("              <label>\r\n");
      out.write("                <b>비밀번호 확인</b>\r\n");
      out.write("              </label>\r\n");
      out.write("              <input class=\"w3-input w3-border\" type=\"password\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.password}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"passwordCheck\" maxlength=\"10\" required>\r\n");
      out.write("              <div id=\"comparePW\" style=\"color:red\"></div>\r\n");
      out.write("              <button class=\"w3-section w3-padding\" id=\"update\" type=\"button\">변경</button>\r\n");
      out.write("              <button class=\"w3-section w3-padding leaveBtn\" id=\"delete\" type=\"button\" style=\"float:right;\">회원탈퇴</button>\r\n");
      out.write("            </div><!-- 업데이트 끝 .w3-section -->\r\n");
      out.write("            <!-- 회원탈퇴 시작 -->\r\n");
      out.write("            <div id=\"deleteArea\" class=\"w3-section\" style=\"padding:40px; display:none;\">\r\n");
      out.write("              <label>\r\n");
      out.write("                <b>비밀번호를 입력하세요</b>\r\n");
      out.write("              </label>\r\n");
      out.write("              <div>\r\n");
      out.write("                <form method=\"post\" class=\"w3-container\">\r\n");
      out.write("                  <input class=\"w3-input w3-border w3-margin-bottom\" type=\"password\" name=\"userPwd\" required>\r\n");
      out.write("                  <button class=\"w3-section w3-padding\" type=\"button\">확인</button>\r\n");
      out.write("                  <div id=\"deleteResult\" style=\"color:red;\"></div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div><!-- 회원탈퇴 끝 .w3-section -->\r\n");
      out.write("          </div><!-- .w3-modal-content -->\r\n");
      out.write("        </div><!-- .w3-modal -->\r\n");
      out.write("      </div><!-- .w3-container -->\r\n");
      out.write("    </form>\r\n");
      out.write("    <!-- 내 정보 끝 -->\r\n");
      out.write("  \r\n");
      out.write("    <!-- 결과보기 시작 -->\r\n");
      out.write("    <div class=\"w3-container\">\r\n");
      out.write("      <div id=\"id02\" class=\"w3-modal\">\r\n");
      out.write("        <div class=\"w3-modal-content w3-card-4 w3-animate-zoom\" style=\"max-width:90%\">\r\n");
      out.write("          <div class=\"w3-center\"><br>\r\n");
      out.write("            <span onclick=\"document.getElementById('id02').style.display='none'\" class=\"w3-button w3-xlarge w3-hover-red w3-display-topright\" title=\"Close Modal\">&times;</span>\r\n");
      out.write("          </div><!-- w3-center -->\r\n");
      out.write("          <div class=\"w3-section\" style=\"padding:40px;\">\r\n");
      out.write("            <h6 style=\"text-align:center;\">\r\n");
      out.write("              <b>\r\n");
      out.write("                <span id=\"yesterday\"></span> 경기\r\n");
      out.write("              </b>\r\n");
      out.write("                <span>&nbsp;( <span id=\"correctCount\"></span>개 정답 / <span id=\"totalCount\"></span>개 선택 )</span>\r\n");
      out.write("            </h6>\r\n");
      out.write("            <table class=\"resultTable\" style=\"margin: 0 auto;\">\r\n");
      out.write("  \t\t        <thead>\r\n");
      out.write("    \t\t      <tr id=\"thisMatch\">\r\n");
      out.write("    \t\t        <th>원정 vs 홈</th>\r\n");
      out.write("    \t\t      </tr>\r\n");
      out.write("  \t\t\t    </thead>\r\n");
      out.write("  \t\t\t    <tbody>\r\n");
      out.write("    \t\t      <tr id=\"myChoice\">\r\n");
      out.write("    \t\t        <th>나의 선택</th>\r\n");
      out.write("\t\t\t      </tr>\r\n");
      out.write("  \t\t\t    </tbody>\r\n");
      out.write("\t\t      </table>\r\n");
      out.write("              <h6 style=\"text-align:center; margin-top:50px;\"><b>내 포인트 현황</b></h6>\r\n");
      out.write("              <table class=\"content-table\" style=\"width: 50%; margin: 0 auto;\">\r\n");
      out.write("  \t\t        <thead>\r\n");
      out.write("    \t\t      <tr>\r\n");
      out.write("      \t\t        <th>날짜</th>\r\n");
      out.write("      \t\t\t    <th>획득한 포인트</th>\r\n");
      out.write("      \t\t\t    <th>누적 포인트</th>\r\n");
      out.write("    \t\t      </tr>\r\n");
      out.write("  \t\t\t    </thead>\r\n");
      out.write("  \t\t\t    <tbody id=\"pointTable\">\r\n");
      out.write("  \t\t\t    </tbody>\r\n");
      out.write("\t\t      </table>\r\n");
      out.write("            </div><!-- .w3-section -->\r\n");
      out.write("          </div><!-- .w3-modal-content -->\r\n");
      out.write("        </div><!-- .w3-modal -->\r\n");
      out.write("      </div><!-- .w3-container -->\r\n");
      out.write("      <!-- 결과보기 끝 -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("#chatBox {\r\n");
      out.write("\tposition: fixed;\r\n");
      out.write("\tbottom: 100px;\r\n");
      out.write("\tright: 5px;\r\n");
      out.write("\tbackground: #170B3B;\r\n");
      out.write("\twidth: 320px;\r\n");
      out.write("\theight: 350px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tpadding-top: 10px;\r\n");
      out.write("\tborder-radius: 10px;\r\n");
      out.write("\tz-index: 1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#chatlog {\r\n");
      out.write("\twidth: 300px;\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("\tresize: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#msg {\r\n");
      out.write("\twidth: 240px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".button-wrapper {\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tmargin: 20px 5px;\r\n");
      out.write("\tpadding: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dark-button-2 {\r\n");
      out.write("\tbackground: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".show {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder: none;\r\n");
      out.write("\tpadding: 2px;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\ttransition: all .35s ease-in-out .35s;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\twidth: 150px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dark-button-2 .show, .dark-button-2 .show span {\r\n");
      out.write("\tbackground: #333;\r\n");
      out.write("\tcolor: #fff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dark-button-2 .show:after, .dark-button-2 .show:before, .dark-button-2 .show:hover span\r\n");
      out.write("\t{\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tcolor: #444;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".show span {\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\tpadding: 15px 30px;\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tz-index: 100;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\ttransition: all .35s ease-in-out .35s;\r\n");
      out.write("\tpadding: 10px 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".show:hover span {\r\n");
      out.write("\tbackground: #36B4C7;\r\n");
      out.write("\tcolor: #fff;\r\n");
      out.write("\ttransition: all .35s ease-in-out .35s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".show:after {\r\n");
      out.write("\tbottom: -100%;\r\n");
      out.write("\tright: -100%;\r\n");
      out.write("\tcontent: \"\";\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tbackground: #36B4C7;\r\n");
      out.write("\ttransition: all .35s ease-in-out .5s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".show:hover:after {\r\n");
      out.write("\tright: 0;\r\n");
      out.write("\tbottom: 0;\r\n");
      out.write("\ttransition: all ease-in-out .35s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".show:before {\r\n");
      out.write("\ttop: -100%;\r\n");
      out.write("\tleft: -100%;\r\n");
      out.write("\tcontent: \"\";\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tbackground: #36B4C7;\r\n");
      out.write("\ttransition: all .35s ease-in-out .5s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".show:hover:before {\r\n");
      out.write("\tleft: 0;\r\n");
      out.write("\ttop: 0;\r\n");
      out.write("\ttransition: all ease-in-out .35s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#showBox {\r\n");
      out.write("\tposition: fixed;\r\n");
      out.write("\tbottom: 0px;\r\n");
      out.write("\tright: 5px;\r\n");
      out.write("\tz-index: 1;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<!-- 채팅 박스 css 끝 -->\r\n");
      out.write("<!--채팅박스 js 시작 -->\r\n");
      out.write("<script>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t//JQuery\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t$('#chatBox').hide();\r\n");
      out.write("\t\t// 클릭하면 보여지고 다시 클릭하 사라지는\r\n");
      out.write("\t\t$('#show').click(function() {\r\n");
      out.write("\t\t\t$('#chatBox').slideToggle();\r\n");
      out.write("\t\t\tscrolldown();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tfunction scrolldown() {\r\n");
      out.write("\t\t$('#chatlog').scrollTop($('#chatlog')[0].scrollHeight);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tvar userId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.member.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\tvar ws = new WebSocket(\"ws://192.168.0.48:8888/wschat\"); // 서버 아이피 넣어야함.\r\n");
      out.write("\tws.onopen = function() {\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tws.onmessage = function(message) {\r\n");
      out.write("\t\tvar temp = message.data;\r\n");
      out.write("\t\tvar temp1 = temp.indexOf(\":\");\r\n");
      out.write("\t\tvar idPart = temp.substring(0, temp1 - 1); // 세션 아이디랑 동일한지 확인용\r\n");
      out.write("\t\tvar textPart = temp.substring(temp1 + 1, temp.length);\r\n");
      out.write("\t\tvar displayId;\r\n");
      out.write("\t\tif (idPart == \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.member.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\") {\r\n");
      out.write("\t\t\tdisplayId = \"My\";\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tdisplayId = idPart;//\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tdocument.getElementById(\"chatlog\").textContent += displayId + \" : \"\r\n");
      out.write("\t\t\t\t+ textPart + \"\\n\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tscrolldown();\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("/* \tfunction closeConnect() { // 종료부분\r\n");
      out.write("\t\tws.close();\r\n");
      out.write("\t}; */\r\n");
      out.write("\t\r\n");
      out.write("\tfunction postToServer() { // 서버에 보내는 \r\n");
      out.write("\t\tws.send(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.member.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"+\"!!\"+ document.getElementById(\"msg\").value); //userId 추가했음. \r\n");
      out.write("\t\tdocument.getElementById(\"msg\").value = \"\"; // 보내고난 정보 없애는 용도로 사용됨. \r\n");
      out.write("\t};\r\n");
      out.write("\t// Enter Key 누르면 전송되도록\r\n");
      out.write("\tfunction checkEnter() {\r\n");
      out.write("\t\tif (window.event.keyCode == 13) {\r\n");
      out.write("\t\t\tpostToServer();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<!-- 채팅박스 js 끝 -->\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- chatBox -->\r\n");
      out.write("\t<div id=\"chatBox\">\r\n");
      out.write("\t\t<textarea id=\"chatlog\" readonly></textarea>\r\n");
      out.write("\t\t<br /> <input id=\"msg\" type=\"text\" onkeydown=\"checkEnter()\" />\r\n");
      out.write("\t\t<button type=\"button\" id=\"sendButton\" onClick=\"postToServer()\">send</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"dark-button-2 button-wrapper\" id=\"showBox\">\r\n");
      out.write("\t\t<div class=\"show\" id=\"show\">\r\n");
      out.write("\t\t\t<span >잡담 참여</span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- chatBox -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"mapBox\">\r\n");
      out.write("\t\t<div style=\"font-size: 40pt; text-align: center;\">토토 판매점</div>\r\n");
      out.write("\t\t<br />\r\n");
      out.write("\t\t<div id=\"map\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /map.jsp(46,2) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mapList}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /map.jsp(46,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("mapArr");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\tvar marker = new google.maps.Marker({position: {lat: ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mapArr.localY}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(", lng: ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mapArr.localX}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("}, map: map}); \r\n");
            out.write("\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /header.jsp(388,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member != null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t<a href=\"logout.do\"><img class=\"menu\" src=\"image/menu/logout.png\">로그아웃</a> \r\n");
          out.write("\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t<a href=\"../login.html\"><img class=\"menu\" src=\"image/menu/login.png\">로그인</a> \r\n");
          out.write("\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f1 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f1_reused = false;
    try {
      _jspx_th_c_005fchoose_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f1.setParent(null);
      int _jspx_eval_c_005fchoose_005f1 = _jspx_th_c_005fchoose_005f1.doStartTag();
      if (_jspx_eval_c_005fchoose_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f1);
      _jspx_th_c_005fchoose_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      // /header.jsp(408,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member != null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t<img src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.image}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" width=\"40px\" height=\"40px\" alt=\"memberImg\">\r\n");
          out.write("\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f2 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f2_reused = false;
    try {
      _jspx_th_c_005fchoose_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f2.setParent(null);
      int _jspx_eval_c_005fchoose_005f2 = _jspx_th_c_005fchoose_005f2.doStartTag();
      if (_jspx_eval_c_005fchoose_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t");
          if (_jspx_meth_c_005fwhen_005f2(_jspx_th_c_005fchoose_005f2, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f2);
      _jspx_th_c_005fchoose_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f2 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f2_reused = false;
    try {
      _jspx_th_c_005fwhen_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f2);
      // /header.jsp(415,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member != null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f2 = _jspx_th_c_005fwhen_005f2.doStartTag();
      if (_jspx_eval_c_005fwhen_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t<span>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(" 님 &nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n");
          out.write("\t\t\t\t<a class=\"menu\" href=\"#\" onclick=\"document.getElementById('id01').style.display='block'\">\r\n");
          out.write("\t\t\t\t  내 정보\r\n");
          out.write("\t\t\t\t</a>\r\n");
          out.write("\t\t\t\t<span> | </span>\r\n");
          out.write("\t\t\t\t<a class=\"menu totoResult\" href=\"#\" onclick=\"document.getElementById('id02').style.display='block'\">\r\n");
          out.write("\t\t\t\t  결과 보기\r\n");
          out.write("\t\t\t\t</a>\r\n");
          out.write("\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f2);
      _jspx_th_c_005fwhen_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f3 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f3_reused = false;
    try {
      _jspx_th_c_005fchoose_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f3.setParent(null);
      int _jspx_eval_c_005fchoose_005f3 = _jspx_th_c_005fchoose_005f3.doStartTag();
      if (_jspx_eval_c_005fchoose_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t");
          if (_jspx_meth_c_005fwhen_005f3(_jspx_th_c_005fchoose_005f3, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f3);
      _jspx_th_c_005fchoose_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f3, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f3 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f3_reused = false;
    try {
      _jspx_th_c_005fwhen_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f3);
      // /header.jsp(432,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member != null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f3 = _jspx_th_c_005fwhen_005f3.doStartTag();
      if (_jspx_eval_c_005fwhen_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t<img src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.image}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" width=\"40px\" height=\"40px\" alt=\"memberImg\"> \r\n");
          out.write("\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f3);
      _jspx_th_c_005fwhen_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f4 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f4_reused = false;
    try {
      _jspx_th_c_005fchoose_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f4.setParent(null);
      int _jspx_eval_c_005fchoose_005f4 = _jspx_th_c_005fchoose_005f4.doStartTag();
      if (_jspx_eval_c_005fchoose_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t");
          if (_jspx_meth_c_005fwhen_005f4(_jspx_th_c_005fchoose_005f4, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f4);
      _jspx_th_c_005fchoose_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f4 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f4_reused = false;
    try {
      _jspx_th_c_005fwhen_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f4);
      // /header.jsp(439,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f4.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member != null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f4 = _jspx_th_c_005fwhen_005f4.doStartTag();
      if (_jspx_eval_c_005fwhen_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t<span>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(" 님 &nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n");
          out.write("\t\t\t\t<a class=\"menu\" href=\"#\" onclick=\"document.getElementById('id01').style.display='block'\">\r\n");
          out.write("\t\t\t\t  내 정보\r\n");
          out.write("\t\t\t\t</a>\r\n");
          out.write("\t\t\t\t<span> | </span>\r\n");
          out.write("\t\t\t\t<a class=\"menu totoResult\" href=\"#\" onclick=\"document.getElementById('id02').style.display='block'\">\r\n");
          out.write("\t\t\t\t  결과 보기\r\n");
          out.write("\t\t\t\t</a>\r\n");
          out.write("\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f4);
      _jspx_th_c_005fwhen_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f4_reused);
    }
    return false;
  }
}
