package algorithm;

import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		
		int[][] tri = new int[n][n]; //입력값을 받는 배열
		int[][] sum = new int[n][n]; //n행 n열에서의 최대합
		
		/* 입력값을 받음 */
		for(int i=0; i<n; i++) {
			for(int j=0; j<=i; j++) {
				tri[i][j] = sc.nextInt();
			}
		}
		
		/* 최대합 배열 0행 0열 초기화 */
		sum[0][0] = tri[0][0];
		
		/* 최대합을 구해서 배열에 할당한다.
		 * 점화식을 
		 * sum[i][j] = Math.max(sum[i-1][j-1], sum[i-1][j]) + tri[i][j] 로
		 * 세우면 j를 1부터 시작해야 하는데, 그렇게 되면 0열의 값들이 누락되게 됨.
		 */
		for(int i=1; i<n; i++) {
			for(int j=0; j<=i; j++) {
				sum[i][j] = sum[i-1][j] + tri[i][j];
				if(j>1 && sum[i][j] < sum[i-1][j-1] + tri[i][j]) {
					sum[i][j] = sum[i-1][j-1];
				}
			}
		}
		
		/* n-1행의 최댓값을 구함 */
		int max = sum[n-1][0];
		for(int j=0; j<n; j++) {
			if(sum[n-1][j] > max) {
				max = sum[n-1][j];
			}
		}
		System.out.println(max);
	}

}
