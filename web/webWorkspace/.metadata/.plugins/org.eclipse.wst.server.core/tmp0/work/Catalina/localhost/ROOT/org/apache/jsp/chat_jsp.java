/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-07-03 02:30:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class chat_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("#chatBox {\r\n");
      out.write("\tposition: fixed;\r\n");
      out.write("\tbottom: 100px;\r\n");
      out.write("\tright: 5px;\r\n");
      out.write("\tbackground: #170B3B;\r\n");
      out.write("\twidth: 320px;\r\n");
      out.write("\theight: 350px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tpadding-top: 10px;\r\n");
      out.write("\tborder-radius: 10px;\r\n");
      out.write("\tz-index: 1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#chatlog {\r\n");
      out.write("\twidth: 300px;\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("\tresize: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#msg {\r\n");
      out.write("\twidth: 240px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".button-wrapper {\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tmargin: 20px 5px;\r\n");
      out.write("\tpadding: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dark-button-2 {\r\n");
      out.write("\tbackground: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".show {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder: none;\r\n");
      out.write("\tpadding: 2px;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\ttransition: all .35s ease-in-out .35s;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\twidth: 150px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dark-button-2 .show, .dark-button-2 .show span {\r\n");
      out.write("\tbackground: #333;\r\n");
      out.write("\tcolor: #fff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dark-button-2 .show:after, .dark-button-2 .show:before, .dark-button-2 .show:hover span\r\n");
      out.write("\t{\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tcolor: #444;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".show span {\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\tpadding: 15px 30px;\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tz-index: 100;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\ttransition: all .35s ease-in-out .35s;\r\n");
      out.write("\tpadding: 10px 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".show:hover span {\r\n");
      out.write("\tbackground: #36B4C7;\r\n");
      out.write("\tcolor: #fff;\r\n");
      out.write("\ttransition: all .35s ease-in-out .35s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".show:after {\r\n");
      out.write("\tbottom: -100%;\r\n");
      out.write("\tright: -100%;\r\n");
      out.write("\tcontent: \"\";\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tbackground: #36B4C7;\r\n");
      out.write("\ttransition: all .35s ease-in-out .5s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".show:hover:after {\r\n");
      out.write("\tright: 0;\r\n");
      out.write("\tbottom: 0;\r\n");
      out.write("\ttransition: all ease-in-out .35s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".show:before {\r\n");
      out.write("\ttop: -100%;\r\n");
      out.write("\tleft: -100%;\r\n");
      out.write("\tcontent: \"\";\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tbackground: #36B4C7;\r\n");
      out.write("\ttransition: all .35s ease-in-out .5s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".show:hover:before {\r\n");
      out.write("\tleft: 0;\r\n");
      out.write("\ttop: 0;\r\n");
      out.write("\ttransition: all ease-in-out .35s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#showBox {\r\n");
      out.write("\tposition: fixed;\r\n");
      out.write("\tbottom: 0px;\r\n");
      out.write("\tright: 5px;\r\n");
      out.write("\tz-index: 1;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<!-- 채팅 박스 css 끝 -->\r\n");
      out.write("<!--채팅박스 js 시작 -->\r\n");
      out.write("<script>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t//JQuery\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t$('#chatBox').hide();\r\n");
      out.write("\t\t// 클릭하면 보여지고 다시 클릭하 사라지는\r\n");
      out.write("\t\t$('#show').click(function() {\r\n");
      out.write("\t\t\t$('#chatBox').slideToggle();\r\n");
      out.write("\t\t\tscrolldown();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tfunction scrolldown() {\r\n");
      out.write("\t\t$('#chatlog').scrollTop($('#chatlog')[0].scrollHeight);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tvar userId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.member.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\tvar ws = new WebSocket(\"ws://192.168.0.48:8888/wschat\"); // 서버 아이피 넣어야함.\r\n");
      out.write("\tws.onopen = function() {\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tws.onmessage = function(message) {\r\n");
      out.write("\t\tvar temp = message.data;\r\n");
      out.write("\t\tvar temp1 = temp.indexOf(\":\");\r\n");
      out.write("\t\tvar idPart = temp.substring(0, temp1 - 1); // 세션 아이디랑 동일한지 확인용\r\n");
      out.write("\t\tvar textPart = temp.substring(temp1 + 1, temp.length);\r\n");
      out.write("\t\tvar displayId;\r\n");
      out.write("\t\tif (idPart == \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.member.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\") {\r\n");
      out.write("\t\t\tdisplayId = \"My\";\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tdisplayId = idPart;//\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tdocument.getElementById(\"chatlog\").textContent += displayId + \" : \"\r\n");
      out.write("\t\t\t\t+ textPart + \"\\n\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tscrolldown();\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("/* \tfunction closeConnect() { // 종료부분\r\n");
      out.write("\t\tws.close();\r\n");
      out.write("\t}; */\r\n");
      out.write("\t\r\n");
      out.write("\tfunction postToServer() { // 서버에 보내는 \r\n");
      out.write("\t\tws.send(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.member.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"+\"!!\"+ document.getElementById(\"msg\").value); //userId 추가했음. \r\n");
      out.write("\t\tdocument.getElementById(\"msg\").value = \"\"; // 보내고난 정보 없애는 용도로 사용됨. \r\n");
      out.write("\t};\r\n");
      out.write("\t// Enter Key 누르면 전송되도록\r\n");
      out.write("\tfunction checkEnter() {\r\n");
      out.write("\t\tif (window.event.keyCode == 13) {\r\n");
      out.write("\t\t\tpostToServer();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<!-- 채팅박스 js 끝 -->\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- chatBox -->\r\n");
      out.write("\t<div id=\"chatBox\">\r\n");
      out.write("\t\t<textarea id=\"chatlog\" readonly></textarea>\r\n");
      out.write("\t\t<br /> <input id=\"msg\" type=\"text\" onkeydown=\"checkEnter()\" />\r\n");
      out.write("\t\t<button type=\"button\" id=\"sendButton\" onClick=\"postToServer()\">send</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"dark-button-2 button-wrapper\" id=\"showBox\">\r\n");
      out.write("\t\t<div class=\"show\" id=\"show\">\r\n");
      out.write("\t\t\t<span >잡담 참여</span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- chatBox -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
